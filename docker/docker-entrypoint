#!/bin/sh

# Exit on non defined variables and on non zero exit codes
set -eu

SERVER_ADMIN="${SERVER_ADMIN:-you@example.com}"
HTTP_SERVER_NAME="${HTTP_SERVER_NAME:-www.example.com}"
HTTPS_SERVER_NAME="${HTTPS_SERVER_NAME:-www.example.com}"
LOG_LEVEL="${LOG_LEVEL:-info}"
TZ="${TZ:-UTC}"

PHP_MEMORY_LIMIT="${PHP_MEMORY_LIMIT:-256M}"
PHP_POST_MAX_SIZE="${PHP_MEMORY_LIMIT:-50M}"
PHP_UPLOAD_MAX_FILESIZE="${PHP_UPLOAD_MAX_FILESIZE:-50M}"
PHP_POST_MAX_SIZE="${PHP_POST_MAX_SIZE:-21M}"
PHP_XDEBUG_CONFIG_PATH=/etc/php84/conf.d/50_xdebug.ini
PHP_XDEBUG_ENABLED=${PHP_XDEBUG_ENABLED:-""}

echo 'Updating configurations'

if [ ! -z "$PHP_XDEBUG_ENABLED" ]
	then
		PHP_XDEBUG_HOST=${PHP_XDEBUG_HOST:-"host.docker.internal"}
    echo "Enabling XDebug..."
    echo 'zend_extension=xdebug.so' > $PHP_XDEBUG_CONFIG_PATH;
    echo 'xdebug.mode=debug' >> $PHP_XDEBUG_CONFIG_PATH;
    echo "xdebug.client_host=${PHP_XDEBUG_HOST}" >> $PHP_XDEBUG_CONFIG_PATH;
    echo 'xdebug.start_with_request=trigger' >> $PHP_XDEBUG_CONFIG_PATH;
else
    rm -f $PHP_XDEBUG_CONFIG_PATH;
fi

# Change Server Admin, Name, Document Root
sed -i "s/ServerAdmin\ you@example.com/ServerAdmin\ ${SERVER_ADMIN}/" /etc/apache2/httpd.conf
sed -i "s/#ServerName\ www.example.com:80/ServerName\ ${HTTP_SERVER_NAME}/" /etc/apache2/httpd.conf
sed -i 's#^DocumentRoot ".*#DocumentRoot "/htdocs/public"#g' /etc/apache2/httpd.conf
sed -i 's#Directory "/var/www/localhost/htdocs"#Directory "/htdocs/public"#g' /etc/apache2/httpd.conf
sed -i 's#AllowOverride None#AllowOverride All#' /etc/apache2/httpd.conf

# Change TransferLog after ErrorLog
sed -i 's#^ErrorLog .*#ErrorLog "/dev/stderr"\nTransferLog "/dev/stdout"#g' /etc/apache2/httpd.conf
sed -i 's#CustomLog .* combined#CustomLog "/dev/stdout" combined#g' /etc/apache2/httpd.conf

# SSL DocumentRoot and Log locations
sed -i 's#^ErrorLog .*#ErrorLog "/dev/stderr"#g' /etc/apache2/conf.d/ssl.conf
sed -i 's#^TransferLog .*#TransferLog "/dev/stdout"#g' /etc/apache2/conf.d/ssl.conf
sed -i 's#^DocumentRoot ".*#DocumentRoot "/htdocs/public"#g' /etc/apache2/conf.d/ssl.conf
sed -i "s/ServerAdmin\ you@example.com/ServerAdmin\ ${SERVER_ADMIN}/" /etc/apache2/conf.d/ssl.conf
sed -i "s/ServerName\ www.example.com:443/ServerName\ ${HTTPS_SERVER_NAME}/" /etc/apache2/conf.d/ssl.conf

# Re-define LogLevel
sed -i "s#^LogLevel .*#LogLevel ${LOG_LEVEL}#g" /etc/apache2/httpd.conf

# Enable commonly used apache modules
sed -i 's/#LoadModule\ rewrite_module/LoadModule\ rewrite_module/' /etc/apache2/httpd.conf
sed -i 's/#LoadModule\ deflate_module/LoadModule\ deflate_module/' /etc/apache2/httpd.conf
sed -i 's/#LoadModule\ expires_module/LoadModule\ expires_module/' /etc/apache2/httpd.conf

# Modify php memory limit and timezone
sed -i "s/memory_limit = .*/memory_limit = ${PHP_MEMORY_LIMIT}/" /etc/php84/php.ini
sed -i "s#^;date.timezone =\$#date.timezone = \"${TZ}\"#" /etc/php84/php.ini
sed -i "s/upload_max_filesize =.*/upload_max_filesize = ${PHP_UPLOAD_MAX_FILESIZE}/" /etc/php84/php.ini
sed -i "s/post_max_size =.*/post_max_size = ${PHP_POST_MAX_SIZE}/" /etc/php84/php.ini

# define de APP_ENV variable with 'dev' as default value
export APP_ENV=${APP_ENV:-"dev"}

# Check if environment is production
if [ "$APP_ENV" = "prod" ]; then
    # Run production-specific commands
    composer dump-env $APP_ENV
    ./bin/console secrets:decrypt-to-local --force
    ./bin/console doctrine:schema:update --dump-sql --force
fi


if [ "$#" -eq 0 ]; then
  echo 'Running Apache'
  httpd -D FOREGROUND
else
  exec "$@"
fi
