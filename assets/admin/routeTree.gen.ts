/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as AdminAboutRouteImport } from './routes/admin/about'
import { Route as AdminAgentsIndexRouteImport } from './routes/admin/agents/index'
import { Route as AdminAgentsAgentIdRouteRouteImport } from './routes/admin/agents/$agentId/route'
import { Route as AdminAgentsAgentIdIndexRouteImport } from './routes/admin/agents/$agentId/index'
import { Route as AdminAgentsAgentIdInstallRouteImport } from './routes/admin/agents/$agentId/install'
import { Route as AdminAgentsAgentIdArticlesRouteImport } from './routes/admin/agents/$agentId/articles'
import { Route as AdminAgentsAgentIdProductsRouteRouteImport } from './routes/admin/agents/$agentId/products/route'
import { Route as AdminAgentsAgentIdProductsIndexRouteImport } from './routes/admin/agents/$agentId/products/index'
import { Route as AdminAgentsAgentIdChatIndexRouteImport } from './routes/admin/agents/$agentId/chat/index'
import { Route as AdminAgentsAgentIdProductsProviderRouteImport } from './routes/admin/agents/$agentId/products/provider'
import { Route as AdminAgentsAgentIdChatIntentsIndexRouteImport } from './routes/admin/agents/$agentId/chat/intents/index'
import { Route as AdminAgentsAgentIdChatIntentsIntentIdRouteImport } from './routes/admin/agents/$agentId/chat/intents/$intentId'

const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAboutRoute = AdminAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAgentsIndexRoute = AdminAgentsIndexRouteImport.update({
  id: '/agents/',
  path: '/agents/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAgentsAgentIdRouteRoute = AdminAgentsAgentIdRouteRouteImport.update({
  id: '/agents/$agentId',
  path: '/agents/$agentId',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAgentsAgentIdIndexRoute = AdminAgentsAgentIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminAgentsAgentIdRouteRoute,
} as any)
const AdminAgentsAgentIdInstallRoute =
  AdminAgentsAgentIdInstallRouteImport.update({
    id: '/install',
    path: '/install',
    getParentRoute: () => AdminAgentsAgentIdRouteRoute,
  } as any)
const AdminAgentsAgentIdArticlesRoute =
  AdminAgentsAgentIdArticlesRouteImport.update({
    id: '/articles',
    path: '/articles',
    getParentRoute: () => AdminAgentsAgentIdRouteRoute,
  } as any)
const AdminAgentsAgentIdProductsRouteRoute =
  AdminAgentsAgentIdProductsRouteRouteImport.update({
    id: '/products',
    path: '/products',
    getParentRoute: () => AdminAgentsAgentIdRouteRoute,
  } as any)
const AdminAgentsAgentIdProductsIndexRoute =
  AdminAgentsAgentIdProductsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AdminAgentsAgentIdProductsRouteRoute,
  } as any)
const AdminAgentsAgentIdChatIndexRoute =
  AdminAgentsAgentIdChatIndexRouteImport.update({
    id: '/chat/',
    path: '/chat/',
    getParentRoute: () => AdminAgentsAgentIdRouteRoute,
  } as any)
const AdminAgentsAgentIdProductsProviderRoute =
  AdminAgentsAgentIdProductsProviderRouteImport.update({
    id: '/provider',
    path: '/provider',
    getParentRoute: () => AdminAgentsAgentIdProductsRouteRoute,
  } as any)
const AdminAgentsAgentIdChatIntentsIndexRoute =
  AdminAgentsAgentIdChatIntentsIndexRouteImport.update({
    id: '/chat/intents/',
    path: '/chat/intents/',
    getParentRoute: () => AdminAgentsAgentIdRouteRoute,
  } as any)
const AdminAgentsAgentIdChatIntentsIntentIdRoute =
  AdminAgentsAgentIdChatIntentsIntentIdRouteImport.update({
    id: '/chat/intents/$intentId',
    path: '/chat/intents/$intentId',
    getParentRoute: () => AdminAgentsAgentIdRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/admin': typeof AdminRouteRouteWithChildren
  '/admin/about': typeof AdminAboutRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/agents/$agentId': typeof AdminAgentsAgentIdRouteRouteWithChildren
  '/admin/agents': typeof AdminAgentsIndexRoute
  '/admin/agents/$agentId/products': typeof AdminAgentsAgentIdProductsRouteRouteWithChildren
  '/admin/agents/$agentId/articles': typeof AdminAgentsAgentIdArticlesRoute
  '/admin/agents/$agentId/install': typeof AdminAgentsAgentIdInstallRoute
  '/admin/agents/$agentId/': typeof AdminAgentsAgentIdIndexRoute
  '/admin/agents/$agentId/products/provider': typeof AdminAgentsAgentIdProductsProviderRoute
  '/admin/agents/$agentId/chat': typeof AdminAgentsAgentIdChatIndexRoute
  '/admin/agents/$agentId/products/': typeof AdminAgentsAgentIdProductsIndexRoute
  '/admin/agents/$agentId/chat/intents/$intentId': typeof AdminAgentsAgentIdChatIntentsIntentIdRoute
  '/admin/agents/$agentId/chat/intents': typeof AdminAgentsAgentIdChatIntentsIndexRoute
}
export interface FileRoutesByTo {
  '/admin/about': typeof AdminAboutRoute
  '/admin': typeof AdminIndexRoute
  '/admin/agents': typeof AdminAgentsIndexRoute
  '/admin/agents/$agentId/articles': typeof AdminAgentsAgentIdArticlesRoute
  '/admin/agents/$agentId/install': typeof AdminAgentsAgentIdInstallRoute
  '/admin/agents/$agentId': typeof AdminAgentsAgentIdIndexRoute
  '/admin/agents/$agentId/products/provider': typeof AdminAgentsAgentIdProductsProviderRoute
  '/admin/agents/$agentId/chat': typeof AdminAgentsAgentIdChatIndexRoute
  '/admin/agents/$agentId/products': typeof AdminAgentsAgentIdProductsIndexRoute
  '/admin/agents/$agentId/chat/intents/$intentId': typeof AdminAgentsAgentIdChatIntentsIntentIdRoute
  '/admin/agents/$agentId/chat/intents': typeof AdminAgentsAgentIdChatIntentsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/admin': typeof AdminRouteRouteWithChildren
  '/admin/about': typeof AdminAboutRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/agents/$agentId': typeof AdminAgentsAgentIdRouteRouteWithChildren
  '/admin/agents/': typeof AdminAgentsIndexRoute
  '/admin/agents/$agentId/products': typeof AdminAgentsAgentIdProductsRouteRouteWithChildren
  '/admin/agents/$agentId/articles': typeof AdminAgentsAgentIdArticlesRoute
  '/admin/agents/$agentId/install': typeof AdminAgentsAgentIdInstallRoute
  '/admin/agents/$agentId/': typeof AdminAgentsAgentIdIndexRoute
  '/admin/agents/$agentId/products/provider': typeof AdminAgentsAgentIdProductsProviderRoute
  '/admin/agents/$agentId/chat/': typeof AdminAgentsAgentIdChatIndexRoute
  '/admin/agents/$agentId/products/': typeof AdminAgentsAgentIdProductsIndexRoute
  '/admin/agents/$agentId/chat/intents/$intentId': typeof AdminAgentsAgentIdChatIntentsIntentIdRoute
  '/admin/agents/$agentId/chat/intents/': typeof AdminAgentsAgentIdChatIntentsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/admin'
    | '/admin/about'
    | '/admin/'
    | '/admin/agents/$agentId'
    | '/admin/agents'
    | '/admin/agents/$agentId/products'
    | '/admin/agents/$agentId/articles'
    | '/admin/agents/$agentId/install'
    | '/admin/agents/$agentId/'
    | '/admin/agents/$agentId/products/provider'
    | '/admin/agents/$agentId/chat'
    | '/admin/agents/$agentId/products/'
    | '/admin/agents/$agentId/chat/intents/$intentId'
    | '/admin/agents/$agentId/chat/intents'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/admin/about'
    | '/admin'
    | '/admin/agents'
    | '/admin/agents/$agentId/articles'
    | '/admin/agents/$agentId/install'
    | '/admin/agents/$agentId'
    | '/admin/agents/$agentId/products/provider'
    | '/admin/agents/$agentId/chat'
    | '/admin/agents/$agentId/products'
    | '/admin/agents/$agentId/chat/intents/$intentId'
    | '/admin/agents/$agentId/chat/intents'
  id:
    | '__root__'
    | '/admin'
    | '/admin/about'
    | '/admin/'
    | '/admin/agents/$agentId'
    | '/admin/agents/'
    | '/admin/agents/$agentId/products'
    | '/admin/agents/$agentId/articles'
    | '/admin/agents/$agentId/install'
    | '/admin/agents/$agentId/'
    | '/admin/agents/$agentId/products/provider'
    | '/admin/agents/$agentId/chat/'
    | '/admin/agents/$agentId/products/'
    | '/admin/agents/$agentId/chat/intents/$intentId'
    | '/admin/agents/$agentId/chat/intents/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/about': {
      id: '/admin/about'
      path: '/about'
      fullPath: '/admin/about'
      preLoaderRoute: typeof AdminAboutRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/agents/': {
      id: '/admin/agents/'
      path: '/agents'
      fullPath: '/admin/agents'
      preLoaderRoute: typeof AdminAgentsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/agents/$agentId': {
      id: '/admin/agents/$agentId'
      path: '/agents/$agentId'
      fullPath: '/admin/agents/$agentId'
      preLoaderRoute: typeof AdminAgentsAgentIdRouteRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/agents/$agentId/': {
      id: '/admin/agents/$agentId/'
      path: '/'
      fullPath: '/admin/agents/$agentId/'
      preLoaderRoute: typeof AdminAgentsAgentIdIndexRouteImport
      parentRoute: typeof AdminAgentsAgentIdRouteRoute
    }
    '/admin/agents/$agentId/install': {
      id: '/admin/agents/$agentId/install'
      path: '/install'
      fullPath: '/admin/agents/$agentId/install'
      preLoaderRoute: typeof AdminAgentsAgentIdInstallRouteImport
      parentRoute: typeof AdminAgentsAgentIdRouteRoute
    }
    '/admin/agents/$agentId/articles': {
      id: '/admin/agents/$agentId/articles'
      path: '/articles'
      fullPath: '/admin/agents/$agentId/articles'
      preLoaderRoute: typeof AdminAgentsAgentIdArticlesRouteImport
      parentRoute: typeof AdminAgentsAgentIdRouteRoute
    }
    '/admin/agents/$agentId/products': {
      id: '/admin/agents/$agentId/products'
      path: '/products'
      fullPath: '/admin/agents/$agentId/products'
      preLoaderRoute: typeof AdminAgentsAgentIdProductsRouteRouteImport
      parentRoute: typeof AdminAgentsAgentIdRouteRoute
    }
    '/admin/agents/$agentId/products/': {
      id: '/admin/agents/$agentId/products/'
      path: '/'
      fullPath: '/admin/agents/$agentId/products/'
      preLoaderRoute: typeof AdminAgentsAgentIdProductsIndexRouteImport
      parentRoute: typeof AdminAgentsAgentIdProductsRouteRoute
    }
    '/admin/agents/$agentId/chat/': {
      id: '/admin/agents/$agentId/chat/'
      path: '/chat'
      fullPath: '/admin/agents/$agentId/chat'
      preLoaderRoute: typeof AdminAgentsAgentIdChatIndexRouteImport
      parentRoute: typeof AdminAgentsAgentIdRouteRoute
    }
    '/admin/agents/$agentId/products/provider': {
      id: '/admin/agents/$agentId/products/provider'
      path: '/provider'
      fullPath: '/admin/agents/$agentId/products/provider'
      preLoaderRoute: typeof AdminAgentsAgentIdProductsProviderRouteImport
      parentRoute: typeof AdminAgentsAgentIdProductsRouteRoute
    }
    '/admin/agents/$agentId/chat/intents/': {
      id: '/admin/agents/$agentId/chat/intents/'
      path: '/chat/intents'
      fullPath: '/admin/agents/$agentId/chat/intents'
      preLoaderRoute: typeof AdminAgentsAgentIdChatIntentsIndexRouteImport
      parentRoute: typeof AdminAgentsAgentIdRouteRoute
    }
    '/admin/agents/$agentId/chat/intents/$intentId': {
      id: '/admin/agents/$agentId/chat/intents/$intentId'
      path: '/chat/intents/$intentId'
      fullPath: '/admin/agents/$agentId/chat/intents/$intentId'
      preLoaderRoute: typeof AdminAgentsAgentIdChatIntentsIntentIdRouteImport
      parentRoute: typeof AdminAgentsAgentIdRouteRoute
    }
  }
}

interface AdminAgentsAgentIdProductsRouteRouteChildren {
  AdminAgentsAgentIdProductsProviderRoute: typeof AdminAgentsAgentIdProductsProviderRoute
  AdminAgentsAgentIdProductsIndexRoute: typeof AdminAgentsAgentIdProductsIndexRoute
}

const AdminAgentsAgentIdProductsRouteRouteChildren: AdminAgentsAgentIdProductsRouteRouteChildren =
  {
    AdminAgentsAgentIdProductsProviderRoute:
      AdminAgentsAgentIdProductsProviderRoute,
    AdminAgentsAgentIdProductsIndexRoute: AdminAgentsAgentIdProductsIndexRoute,
  }

const AdminAgentsAgentIdProductsRouteRouteWithChildren =
  AdminAgentsAgentIdProductsRouteRoute._addFileChildren(
    AdminAgentsAgentIdProductsRouteRouteChildren,
  )

interface AdminAgentsAgentIdRouteRouteChildren {
  AdminAgentsAgentIdProductsRouteRoute: typeof AdminAgentsAgentIdProductsRouteRouteWithChildren
  AdminAgentsAgentIdArticlesRoute: typeof AdminAgentsAgentIdArticlesRoute
  AdminAgentsAgentIdInstallRoute: typeof AdminAgentsAgentIdInstallRoute
  AdminAgentsAgentIdIndexRoute: typeof AdminAgentsAgentIdIndexRoute
  AdminAgentsAgentIdChatIndexRoute: typeof AdminAgentsAgentIdChatIndexRoute
  AdminAgentsAgentIdChatIntentsIntentIdRoute: typeof AdminAgentsAgentIdChatIntentsIntentIdRoute
  AdminAgentsAgentIdChatIntentsIndexRoute: typeof AdminAgentsAgentIdChatIntentsIndexRoute
}

const AdminAgentsAgentIdRouteRouteChildren: AdminAgentsAgentIdRouteRouteChildren =
  {
    AdminAgentsAgentIdProductsRouteRoute:
      AdminAgentsAgentIdProductsRouteRouteWithChildren,
    AdminAgentsAgentIdArticlesRoute: AdminAgentsAgentIdArticlesRoute,
    AdminAgentsAgentIdInstallRoute: AdminAgentsAgentIdInstallRoute,
    AdminAgentsAgentIdIndexRoute: AdminAgentsAgentIdIndexRoute,
    AdminAgentsAgentIdChatIndexRoute: AdminAgentsAgentIdChatIndexRoute,
    AdminAgentsAgentIdChatIntentsIntentIdRoute:
      AdminAgentsAgentIdChatIntentsIntentIdRoute,
    AdminAgentsAgentIdChatIntentsIndexRoute:
      AdminAgentsAgentIdChatIntentsIndexRoute,
  }

const AdminAgentsAgentIdRouteRouteWithChildren =
  AdminAgentsAgentIdRouteRoute._addFileChildren(
    AdminAgentsAgentIdRouteRouteChildren,
  )

interface AdminRouteRouteChildren {
  AdminAboutRoute: typeof AdminAboutRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AdminAgentsAgentIdRouteRoute: typeof AdminAgentsAgentIdRouteRouteWithChildren
  AdminAgentsIndexRoute: typeof AdminAgentsIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminAboutRoute: AdminAboutRoute,
  AdminIndexRoute: AdminIndexRoute,
  AdminAgentsAgentIdRouteRoute: AdminAgentsAgentIdRouteRouteWithChildren,
  AdminAgentsIndexRoute: AdminAgentsIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AdminRouteRoute: AdminRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
